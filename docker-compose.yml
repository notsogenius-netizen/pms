services:
  postgres:
    image: postgres:15
    container_name: pms_postgres_db
    ports:
      - "6000:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-patient_service_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  mongo:
    image: mongo:6
    container_name: pms_mongo_db
    ports:
      - "6001:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-mongo}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-mongo}
    volumes:
      - mongo_data:/data/db
    networks:
      - internal

  patient-service:
    build:
      context: ./patient-service
      dockerfile: Dockerfile
    container_name: pms_patient_service
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-patient_service_db}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
    networks:
      - internal
    restart: unless-stopped

  billing-service:
    build:
      context: ./billing-service
      dockerfile: Dockerfile
    container_name: pms_billing_service
    ports:
      - "8001:8001"  # HTTP port
      - "9090:9090"  # gRPC port
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - internal
    restart: unless-stopped

networks:
  internal:
    driver: bridge

volumes:
  postgres_data:
  mongo_data: