services:
  postgres:
    image: postgres:15
    container_name: pms_postgres_db
    ports:
      - "6000:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-patient_service_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  mongo:
    image: mongo:6
    container_name: pms_mongo_db
    ports:
      - "6001:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-mongo}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-mongo}
    volumes:
      - mongo_data:/data/db
    networks:
      - internal

  kafka:
    image: bitnami/kafka:latest
    container_name: pms_kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: 'controller,broker'
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '0@kafka:9093'
      KAFKA_CFG_LISTENERS: 'PLAINTEXT://:9092,CONTROLLER://:9093'
      KAFKA_CFG_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      ALLOW_PLAINTEXT_LISTENER: yes
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - internal
    restart: unless-stopped

  patient-service:
    build:
      context: ./patient-service
      dockerfile: Dockerfile
    container_name: pms_patient_service
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-patient_service_db}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      BILLING_SERVICE_ADDRESS: billing-service
      BILLING_SERVICE_PORT: 9090
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - internal
    restart: unless-stopped

  billing-service:
    build:
      context: ./billing-service
      dockerfile: Dockerfile
    container_name: pms_billing_service
    ports:
      - "8001:8001"  # HTTP port
      - "9090:9090"  # gRPC port
    depends_on:
      - postgres
      - mongo
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: docker
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - internal
    restart: unless-stopped

networks:
  internal:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
  kafka_data: